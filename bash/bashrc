#!/bin/bash

# File:      .bashrc
# Purpose:   configure user interactive shell
# Created:   30.12.2019
# Modified:  28.03.2020
# Author:    Artyom Danilov


# If not running interactively, don't do anything.
case $- in
    *i*)
          ;;
      *)
          return ;;
esac


# Colorize prompt
# ------------------------------------------------------------------------------
case "${TERM}" in
    xterm-color | *-256color)
        color_prompt='yes' ;;
esac

force_color_prompt='yes'

if [ -n "${force_color_prompt}" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        color_prompt='yes'
    else
        color_prompt=''
    fi
fi


# Shell options
# ------------------------------------------------------------------------------
# Append to the history file, don't overwrite it.
shopt -s histappend

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# Enable changing directories without typind 'cd'
shopt -s autocd

# Minor errors in the spelling of the directory will be corrected
shopt -s cdspell

# Enable spelling correction on directory names during word completion
shopt -s dirspell

# Enable matching files in a case-insensitive fashion when performing path
# name expansion
shopt -s nocaseglob

# For ctrl mappings in vim.
stty -ixon


# Config files
# ------------------------------------------------------------------------------
# Load shell-independent config files.
for file in "${DOTFILES_HOME}"/shell/*; do
    . "${file}"
done

# Load prompt.
if [ "${color_prompt}" = 'yes' ]; then
    [ -f "${DOTFILES_HOME}"/bash/prompt ] && . "${DOTFILES_HOME}"/bash/prompt
else
    PS1='\u@\h:\w\$ '
fi

# Load bash-specific config files.
for file in 'alias' 'env' 'function'; do
    [ -f "${DOTFILES_HOME}"/bash/"${file}" ] && . "${DOTFILES_HOME}"/bash/"${file}"
done

# Check if running on wsl:
if grep -qEi '(Microsoft|WSL)' /proc/version > /dev/null 2>&1; then
    # Load wsl-specific config files.
    for file in "${DOTFILES_HOME}"/wsl/*; do
        . "${file}"
    done
fi
